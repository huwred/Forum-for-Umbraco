@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using System.EnterpriseServices
@using System.ServiceModel.Security
@using Forums

@*
    lists all the child forums of this one. 
    (uses the cache, to get post count and latest post - without having to recurse everytime)
*@

@{

    var forums = Model.Children().Where(x => x.IsDocumentType("Forum") && x.IsVisible() &&  (x.Value<int?>("membersOnly") !=1 || (x.Value<int?>("membersOnly") == 1 && Members.IsLoggedIn()) )).ToList();

    if ( forums.Any() )
    {
        <div class="forum-list col-12 table-responsive">
            <table class="table table-responsive" style="display: block;">

                <thead class="table-responsive">
                    <tr class="d-flex">
                        <th scope="col" class="col-sm-7">Forums</th>
                        <th scope="col" class="col-sm-2">Posts</th>
                        <th scope="col" class="col-sm-3">Latest post</th>
                    </tr>
                </thead>
                <tbody class="table-responsive">
                    @foreach (var forum in forums)
                    {
                        if (CanView(forum))
                        {
                            var cacheInfo = forum.GetForumInfo(false);

                            <tr class="d-flex">
                                <td class="col-sm-7" >
                                    <strong>
                                        <a href="@forum.Url()">
                                            @forum.Value("forumName")
                                        </a>
                                    </strong>
                                    <small>
                                        @forum.Value("forumIntro")
                                    </small>
                                </td>
                                <td class="col-sm-2 post-count" >@cacheInfo.Count</td>
                                <td class="col-sm-3">
                                    @if (cacheInfo.latestPost != DateTime.MinValue)
                                    {
                                        @ForumHelper.GetRelativeDate(cacheInfo.latestPost) <text>by</text>
                                        @cacheInfo.lastpostAuthor
                                    }

                                </td>
                            </tr>
                        }


                    }
                </tbody>
            </table>
        </div>
    }
}

@functions
{
    public bool CanView(IPublishedContent model)
    {

        var canViewGroups = model.Value<string>("canViewGroups");
        //all members allowed
        if (String.IsNullOrWhiteSpace(canViewGroups))
            return true;

        var allowedGroupList = new List<string>();
        foreach (var memberGroupStr in canViewGroups.Split(','))
        {
            var memberGroup = Services.MemberGroupService.GetById(Convert.ToInt32(memberGroupStr));
            if (memberGroup != null)
            {
                allowedGroupList.Add(memberGroup.Name);
            }
        }
        //check if member is one of the allowed groups

        return Members.IsMemberAuthorized(null, allowedGroupList);
    }


}
