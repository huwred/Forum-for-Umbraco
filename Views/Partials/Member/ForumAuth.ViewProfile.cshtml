@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using System.Web.Mvc.Html
@using Umbraco.Web


@{ 
    var profileModel = Members.GetCurrentMemberProfileModel();
}

@if (Members.IsLoggedIn() && profileModel != null)
{

    <fieldset>

        @Html.ValidationSummary("profileModel", true)
        <div class="form-group">
            @Html.LabelFor(m => profileModel.Name, new { @class = "control-label col-3" })
            @Html.DisplayFor(m => profileModel.Name)
            @Html.ValidationMessageFor(m => profileModel.Name)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => profileModel.Email, new { @class = "control-label col-3" })
            @Html.DisplayFor(m => profileModel.Email)
            @Html.ValidationMessageFor(m => profileModel.Email)
        </div>

        @for (var i = 0; i < profileModel.MemberProperties.Count; i++)
        {
            <div class="form-group">
                @Html.LabelFor(m => profileModel.MemberProperties[i].Value, profileModel.MemberProperties[i].Name, new { @class = "control-label col-3" })
                @*
                    By default this will render a textbox but if you want to change the editor template for this property you can
                    easily change it. For example, if you wanted to render a custom editor for this field called "MyEditor" you would
                    create a file at ~/Views/Shared/EditorTemplates/MyEditor.cshtml", then you will change the next line of code to
                    render your specific editor template like:
                    @Html.EditorFor(m => profileModel.MemberProperties[i].Value, "MyEditor")
                *@
                @if (profileModel.MemberProperties[i].Alias == "receiveNotifications")
                {
                    if (profileModel.MemberProperties[i].Value == "1")
                    {
                        @Html.Raw("True")
                    }
                    else
                    {
                        @Html.Raw("False")
                    }
                }
                else
                {
                    @Html.DisplayFor(m => profileModel.MemberProperties[i].Value)

                }
            </div>

        }
        <div class="form-group">
            <a class="btn btn-primary" href="/profile/?edit=true">Edit profile</a>
        </div>
    </fieldset>
}